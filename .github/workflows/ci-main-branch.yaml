name: CI Pipeline
run-name: CI Pipeline
on:
  workflow_call:
    inputs:
      component:
        required: true
        type: string
      appType:
        required: true
        type: string
    secrets:
      VAULT_TOKEN:
        required: true

jobs:
  build-images:
    runs-on: self-hosted
    steps:
    - name: Import Secrets
      uses: hashicorp/vault-action@v2.4.0
      with:
        url: http://vault-internal.cloudaws.shop:8200
        token: ${{ secrets.VAULT_TOKEN }}
        caCertificate: ${{ secrets.VAULT_TOKEN }}
        secrets: |
          github-action/data/azure_sp/ARM_CLIENT_ID | ARM_CLIENT_ID ;
          github-action/data/azure_sp/ARM_CLIENT_SECRET | ARM_CLIENT_SECRET ;
          github-action/data/azure_sp/ARM_SUBSCRIPTION_ID | ARM_SUBSCRIPTION_ID ;
          github-action/data/azure_sp/ARM_TENANT_ID | ARM_TENANT_ID ;
    - name: tag images
      run: |
        az acr login --name cloudaws
        docker build -t cloudaws.azurecr.io/roboshop-${{ inputs.component }}:${{ github.sha }} 
#      /home/centos/roboshop-${{ inputs.component }}
    
  push-images:
    runs-on: self-hosted
    needs: build-images
    steps:
      echo "hello docker"
#  code-checkout:
#    runs-on: self-hosted
#    steps:
#    - name: Checkout repo
#      uses: actions/checkout@v4
#      with:
#        repository: azawsdevops/roboshop-${{ inputs.component }}
#  
#  app-dependencies:
#    runs-on: self-hosted
#    needs: code-checkout  # This must be correctly indented
#    steps:
#    - name: Downloading app dependencies
#      run: |
#        cd /home/centos/roboshop-${{ inputs.component }} && sudo npm install
#        
#        if [ ${{ inputs.appType }} == maven ]; then
#          mvn clean package
#        elif [ ${{ inputs.appType }} == nodejs ];then
#          npm install
#        elif [[ ${{ inputs.appType }} == python ]]; then
#          pip3 install -r requirements.txt
#        fi
#  
#  code-quality:
#    runs-on: self-hosted
#    needs: app-dependencies  # This must be correctly indented
#    steps:
#    - name: Retrieve Vault Secrets
#      id: import-secrets
#      uses: hashicorp/vault-action@v2
#      with:
#        url: http://vault-internal.cloudaws.shop:8200
#        token: ${{ secrets.VAULT_TOKEN }}
#        secrets: |
#          github-action/data/azure_sp sonar_token | SONAR_TOKEN ;
#    
#    - name: Running Code quality checks
#      run: |
#        /opt/sonar-scanner-6.2.1.4610-linux-x64/bin/sonar-scanner -Dsonar.host.url=http://sonarqube-internal.cloudaws.shop:9000 -Dsonar.token=sqa_c54b102fbda5fc35ec076ce39e8b1310c43a9ed0 -Dsonar.projectKey=${{ inputs.appType }} -Dsonar.qualitygate.wait=true -Dsonar.java.binaries=./target
#  
#  unit-tests:
#    runs-on: self-hosted
#    needs: code-quality  # Ensure correct indentation
#    steps:
#    - name: Unit Tests
#      run: |
#        if [[ "${{ inputs.appType }}" == "maven" ]]; then
#          echo "mvn test"
#        elif [[ "${{ inputs.appType }}" == "nodejs" ]]; then
#          echo "npm test"
#        elif [[ "${{ inputs.appType }}" == "python" ]]; then
#          echo "python -m unittest"
#        fi
